apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-08-06T22:48:11Z"
    generation: 2
    labels:
      app: kube-hello
    name: kube-hello
    namespace: default
    resourceVersion: "59449"
    uid: a83a03d3-e2ee-460c-aded-6f7b44b31003
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kube-hello
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kube-hello
      spec:
        containers:
        - image: gilmaroassis/kube-hello
          imagePullPolicy: Always
          name: kube-hello
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2022-08-06T22:48:12Z"
      lastUpdateTime: "2022-08-06T22:48:14Z"
      message: ReplicaSet "kube-hello-6969d68889" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-08-06T22:48:26Z"
      lastUpdateTime: "2022-08-06T22:48:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-08-06T18:52:47Z"
    generation: 1
    labels:
      c3.doks.digitalocean.com/component: cilium
      c3.doks.digitalocean.com/plane: data
      doks.digitalocean.com/managed: "true"
      io.cilium/app: operator
      name: cilium-operator
    name: cilium-operator
    namespace: kube-system
    resourceVersion: "59289"
    uid: 3b2f034c-b25a-4eb4-8992-9efd6ef4101f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.cilium/app: operator
        name: cilium-operator
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          clusterlint.digitalocean.com/disabled-checks: resource-requirements
        creationTimestamp: null
        labels:
          io.cilium/app: operator
          name: cilium-operator
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: io.cilium/app
                    operator: In
                    values:
                    - operator
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --config-dir=/tmp/cilium/config-map
          - --debug=$(CILIUM_DEBUG)
          - --k8s-api-server=https://16119a41-8b8f-47b9-a094-b07573b5d260.k8s.ondigitalocean.com
          - --cluster-pool-ipv4-cidr=10.244.0.0/16
          command:
          - cilium-operator
          env:
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_DEBUG
            valueFrom:
              configMapKeyRef:
                key: debug
                name: cilium-config
                optional: true
          - name: CILIUM_CLUSTER_NAME
            valueFrom:
              configMapKeyRef:
                key: cluster-name
                name: cilium-config
                optional: true
          - name: CILIUM_CLUSTER_ID
            valueFrom:
              configMapKeyRef:
                key: cluster-id
                name: cilium-config
                optional: true
          - name: CILIUM_IPAM
            valueFrom:
              configMapKeyRef:
                key: ipam
                name: cilium-config
                optional: true
          - name: CILIUM_DISABLE_ENDPOINT_CRD
            valueFrom:
              configMapKeyRef:
                key: disable-endpoint-crd
                name: cilium-config
                optional: true
          - name: CILIUM_KVSTORE
            valueFrom:
              configMapKeyRef:
                key: kvstore
                name: cilium-config
                optional: true
          - name: CILIUM_KVSTORE_OPT
            valueFrom:
              configMapKeyRef:
                key: kvstore-opt
                name: cilium-config
                optional: true
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: cilium-aws
                optional: true
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: cilium-aws
                optional: true
          - name: AWS_DEFAULT_REGION
            valueFrom:
              secretKeyRef:
                key: AWS_DEFAULT_REGION
                name: cilium-aws
                optional: true
          - name: CILIUM_IDENTITY_ALLOCATION_MODE
            valueFrom:
              configMapKeyRef:
                key: identity-allocation-mode
                name: cilium-config
                optional: true
          - name: KUBERNETES_SERVICE_HOST
            value: 16119a41-8b8f-47b9-a094-b07573b5d260.k8s.ondigitalocean.com
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          image: docker.io/cilium/operator:v1.10.13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: cilium-operator
          resources:
            limits:
              memory: 150M
            requests:
              cpu: 100m
              memory: 150M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cilium-operator
        serviceAccountName: cilium-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: cilium-config
          name: cilium-config-path
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-06T18:52:47Z"
      lastUpdateTime: "2022-08-06T18:52:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-06T18:52:47Z"
      lastUpdateTime: "2022-08-06T18:55:18Z"
      message: ReplicaSet "cilium-operator-756f59cb79" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-08-06T18:55:45Z"
    generation: 1
    labels:
      c3.doks.digitalocean.com/component: coredns
      c3.doks.digitalocean.com/plane: data
      doks.digitalocean.com/managed: "true"
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "59295"
    uid: 3e88f9b1-9313-445e-84a9-b4c8be6126cc
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 100%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: docker.io/coredns/coredns:1.8.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 150M
            requests:
              cpu: 100m
              memory: 150M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2022-08-06T18:55:47Z"
      lastUpdateTime: "2022-08-06T18:55:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-06T18:55:45Z"
      lastUpdateTime: "2022-08-06T18:55:48Z"
      message: ReplicaSet "coredns-d4c49d69" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: List
metadata:
  resourceVersion: ""
